@model ResumeBuilder.Models.ViewModels.VMResume
@inject ResumeBuilder.Data.ResumeBuilderContext DBContext

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_CustomLayout.cshtml";

    void PrintF()
    {
        Console.WriteLine("Hello");
    }
}

<h1>Create</h1>

<h4>Resume</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ResumeName" class="control-label"></label>
                <input asp-for="ResumeName" class="form-control" />
                <span asp-validation-for="ResumeName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="JobTitle" class="control-label"></label>
                <input asp-for="JobTitle" class="form-control" />
                <span asp-validation-for="JobTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Skills" class="control-label"></label>
                <input asp-for="Skills" class="form-control" />
                <span asp-validation-for="Skills" class="text-danger"></span>
            </div>            
            @Html.EditorFor(model => model.PersonalInfo)
            @if (Model?.ProfessionalRecord != null)
            {
                @foreach (var item in Model.ProfessionalRecord)
                {
                    @Html.EditorFor(model => item)
                }
            }
            else
            {

            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

