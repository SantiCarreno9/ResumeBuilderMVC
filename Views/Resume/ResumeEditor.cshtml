@model ResumeBuilder.Models.ViewModels.VMResume

@{
    // ViewData["Title"] = "Create";
    // Layout = "~/Views/Shared/_CustomLayout.cshtml";
}

<div class="container w-100">
    <div class="editable-content-cont">
        <h1 contenteditable="true" id="resume-name-input">
            @(Model.Name ?? "Untitled")
        </h1>
        <i class="fas fa-edit"></i>
    </div>
    <hr />
    <div class="main-container">
        <div class="resume-editor-container">
            <div class="accordion" id="customAccordion">
                <div class="editor">
                    <div class="accordion-item">
                        <div class="accordion-header">
                            <button class="accordion-button" style="display:flex; justify-content:end; text-align:end; padding:0.5rem 1rem;" type="button"
                                    onclick:preventDefault data-bs-toggle="collapse" data-bs-target="#collapse-resume" aria-expanded="false" aria-controls="collapse-resume" )">
                                Resume Info
                            </button>
                        </div>
                        <div id="collapse-resume" class="accordion-collapse collapse" data-bs-parent="#customAccordion">
                            <div id="resume-info-placeholder" class="accordion-body">
                            </div>
                        </div>
                    </div>
                    <div class="accordion-item">
                        <div class="accordion-header">
                            <button class="accordion-button" style="display:flex; justify-content:end; text-align:end; padding:0.5rem 1rem;" type="button"
                                    onclick:preventDefault data-bs-toggle="collapse" data-bs-target="#collapse-personal" aria-expanded="false" aria-controls="collapse-personal" )">
                                Personal Info
                            </button>
                        </div>
                        <div id="collapse-personal" class="accordion-collapse collapse" data-bs-parent="#customAccordion">
                            <div id="personal-info-placeholder" class="accordion-body">
                            </div>
                        </div>
                    </div>
                    <div class="accordion-item">
                        <div class="accordion-header">
                            <button class="accordion-button" style="display:flex; justify-content:end; text-align:end; padding:0.5rem 1rem;" type="button"
                                    onclick:preventDefault data-bs-toggle="collapse" data-bs-target="#collapse-education" aria-expanded="false" aria-controls="collapse-education" )">
                                Education
                            </button>
                        </div>
                        <div id="collapse-education" class="accordion-collapse collapse" data-bs-parent="#customAccordion">
                            <button id="load-education-btn" type="button" onclick:preventDefault">
                                Load Profile Entries
                            </button>
                            <div id="education-entries-placeholder" class="accordion-body">
                            </div>
                        </div>
                    </div>
                    <div class="accordion-item">
                        <div class="accordion-header">
                            <button class="accordion-button" style="display:flex; justify-content:end; text-align:end; padding:0.5rem 1rem;" type="button"
                                    onclick:preventDefault data-bs-toggle="collapse" data-bs-target="#collapse-professional" aria-expanded="false" aria-controls="collapse-professional" )">
                                Professional Experience
                            </button>
                        </div>
                        <div id="collapse-professional" class="accordion-collapse collapse" data-bs-parent="#customAccordion">
                            <div id="professional-entries-placeholder" class="accordion-body">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group mt-2">
                <input type="button" id="resume-save-button" value="Save" class="btn btn-primary" />
                <input type="button" id="cancel-save-button" value="Cancel" class="btn btn-secondary" />
            </div>
        </div>
        <div id="resume-preview-container">
        </div>
    </div>
</div>

<button id="open-modal-btn" type="button" class="btn btn-primary" style="display:none" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                @* <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1> *@
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js" integrity="sha512-rstIgDs0xPgmG6RX1Aba4KV5cWJbAMcvRCVmglpam9SoHZiUCyQVDdH2LPlxoHtrv17XWblE/V/PP+Tr04hbtA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js" integrity="sha512-xq+Vm8jC94ynOikewaQXMEkJIOBp7iArs3IhFWSWdRT3Pq8wFz46p+ZDFAR7kHnSFf+zUv52B3prRYnbDRdgog==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            let templateId = 1;
            let originalResumeCopy = {};

            function getResume() {
                $.ajax({
                    url: '@Url.Action("ResumeInfo")?resumeId=@Model.Id',
                    type: "GET",
                    dataType: "json",
                    success: function (response) {
                        originalResumeCopy = response;
                    },
                    error: function (request, status, error) {
                        console.log(request.responseText);
                    }
                });
            }

            $("#resume-cancel-button").click(function () {
                $.ajax({
                    url: '@Url.Action("ResumeInfo")?resumeId=@Model.Id',
                    type: "PUT",
                    data: originalResumeCopy,
                    dataType: "json",
                    success: function (response) {
                        window.location.replace('@Url.Action("Index")');
                    },
                    error: function (request, status, error) {
                        console.log(request.responseText);
                    }
                });
            })

            getResumePreview();

            // Resume Name

            $("#resume-save-button").click(function () {
                // const newName = $('#resume-name-input').val();
                // $.ajax({
                //     url: '@Url.Action("ResumeName")?resumeId=@Model.Id',
                //     type: "PUT",
                //     data: { resumeId: '@Model.Id', newName: newName },
                //     success: function (response) {
                //         window.location.replace('@Url.Action("Index")');
                //     },
                //     error: function (request, status, error) {
                //         console.log(request.responseText);
                //     }
                // });
            })

            // Resume Info
            loadResumeInfo();

            function loadResumeInfo() {
                const actionId = @((int)FormActions.None);
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("BasicResumeInfoForm")',
                    data: { resumeId: '@Model.Id', actionId: actionId },
                    success: function (result) {
                        const container = $('#resume-info-placeholder');
                        $(container).empty();
                        $(container).append(result);
                    },
                    error: function () {
                        alert("Error trying to retrieve resume info");
                    }
                })
            }

            // Personal Info
            loadPersonalInfo();

            function loadPersonalInfo() {
                const actionId = @((int)FormActions.None);
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("PersonalInfoForm")',
                    data: { resumeId: '@Model.Id', actionId: actionId },
                    success: function (result) {
                        const container = $('#personal-info-placeholder');
                        $(container).empty();
                        $(container).append(result);
                    },
                    error: function () {
                        alert("Error trying to retrieve personal info");
                    }
                })
            }

            // Profile Entries

            $("#load-education-btn").click(function () {
                $.ajax({
                    url: '@Url.Action("ResumeInfo")?resumeId=@Model.Id',
                    type: "PUT",
                    data: originalResumeCopy,
                    dataType: "json",
                    success: function (response) {
                        window.location.replace('@Url.Action("Index")');
                    },
                    error: function (request, status, error) {
                        console.log(request.responseText);
                    }
                });
            })

            // loadProfileEntries(@((int)EntryCategory.Education));
            // loadProfileEntries(@((int)EntryCategory.WorkExperience));

            $("#add-education").click(function () {
                openEntryForm(@((int)EntryCategory.Education));
            })

            $("#add-experience").click(function () {
                openEntryForm(@((int)EntryCategory.WorkExperience));
            })

            function loadProfileEntries(categoryId) {
                const actionId = @((int)FormActions.None);
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("ProfileEntriesView")',
                    data: { category: categoryId, actionId: actionId },
                    success: function (result) {
                        let container;
                        if (categoryId == @((int)(EntryCategory.Education)))
                            container = "#education-list";
                        else container = "#experience-list";
                        $(container).empty();
                        $(container).append(result);
                        const containerJs = $(container)[0];
                        let entries = containerJs.getElementsByClassName('profile-entry-container');
                        for (let i = 0; i < entries.length; i++) {
                            entries[i].classList.add('card');
                            entries[i].classList.add('mb-2');
                        }
                    },
                    error: function () {
                        alert("Error trying to retrieve Entries");
                    }
                })
            }

            function loadProfileEntries(categoryId) {
                const actionId = @((int)FormActions.None);
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetProfileEntries")',
                    data: { category: categoryId},
                    success: function (result) {
                        // let container;
                        // if (categoryId == @((int)(EntryCategory.Education)))
                        //     container = "#education-list";
                        // else container = "#experience-list";
                        // $(container).empty();
                        // $(container).append(result);
                        // const containerJs = $(container)[0];
                        // let entries = containerJs.getElementsByClassName('profile-entry-container');
                        // for (let i = 0; i < entries.length; i++) {
                        //     entries[i].classList.add('card');
                        //     entries[i].classList.add('mb-2');
                        // }
                    },
                    error: function () {
                        alert("Error trying to retrieve Entries");
                    }
                })
            }

            function openEntryForm(categoryId) {
                const actionId = @((int)FormActions.Create);
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("ProfileEntryForm")',
                    data: { category: categoryId, actionId: actionId },
                    success: function (result) {
                    },
                    error: function () {
                        alert("Error trying to retrieve AddProfileEntry");
                    }
                })
            }

            // Preview
            function getResumePreview() {
                $.ajax({
                    url: '@Url.Action("ResumePreview")?templateid=' + templateId,
                    type: 'GET',
                    data: { resumeId: '@Model.Id', templateId: templateId },
                    success: function (response) {
                        // console.log(response.request);
                        console.log('response');
                        $("#resume-preview-container").empty();
                        $("#resume-preview-container").append(response);
                    },
                    error: function (request, status, error) {
                        console.log(request.responseText);
                    }
                });
            }

            // Request Observer

            $(document).ajaxSuccess(function (event, xhr, settings) {
                if (settings.url.includes('@Url.Action("ProfileEntryForm")')) {
                    var result = xhr.responseText;
                    console.log(result);
                    $(".modal-body").empty();
                    $(".modal-body").append(result);
                    $(".modal-body").find("#cancel-btn").click(function () {
                        hideForm()
                    });
                    $("#open-modal-btn").trigger("click");
                }
                else if (settings.url.includes('@Url.Action("PersonalInfo")') ||
                    settings.url.includes('@Url.Action("BasicResumeInfo")')) {
                    getResumePreview();
                }
                else if (settings.url.includes('@Url.Action("ProfileEntry")')) {
                    var response = xhr.responseJSON;
                    loadProfileEntries(response.category);
                    hideForm();
                    getResumePreview();
                }
            });

            function hideForm() {
                $(".btn-close").trigger("click");
            }
        });
    </script>
}