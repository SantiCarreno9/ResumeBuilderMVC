@model ResumeBuilder.Models.ViewModels.VMResume

@{
    string GetDates(DateTime? startDate, DateTime? endDate)
    {
        if (!startDate.HasValue)
            return "";
        string startDateText = startDate.Value.ToString("MMM yyyy");
        string endDateText = endDate.HasValue ? endDate.Value.ToString("MMM yyyy") : "Present";
        return startDate + " - " + endDate;
    }

    string[]? orderedCategories = null;
    if (Model.OrderedCategories != null)
        orderedCategories = (string[]?)(ViewData["OrderedCategories"]);
    if (orderedCategories == null)
        orderedCategories = Enum.GetNames(typeof(EntryCategory));

    var skills = Model.ResumeInfo?.SkillsObject;
    var contacts = Model.PersonalInfo?.Contacts;
    var educationEntries = Model.ProfileEntries?.Where(x => !string.IsNullOrEmpty(x.Category) && x.Category.Equals(Enum.GetName(EntryCategory.Education)));
}
@if (Model == null)
    return;

<div class="resume">
    <header id="header">
        <!-- resume header with your name and title -->
        @if (Model!.PersonalInfo != null)
        {
            if (Model!.PersonalInfo!.FirstName != null || Model!.PersonalInfo!.LastName != null)
            {
                <h1>@Model.PersonalInfo?.FirstName @Model?.PersonalInfo?.LastName</h1>
            }
            else
            {
                <h1 class="template-content">[Name]</h1>
            }
        }

        <hr>
        @if (Model!.ResumeInfo != null && Model!.ResumeInfo.JobTitle != null)
        {
            <h2> @Model!.ResumeInfo!.JobTitle</h2>
        }
        else
        {
            <h2 class="template-content">[Job Title]</h2>
        }

        <hr>
    </header>
    <main>
        <article id="mainLeft">
            <section>
                <h2>CONTACT</h2>
                <br>
                <!-- PHONE NUMBER -->
                @if(Model.PersonalInfo?.PhoneNumber!=null)
                {
                    <p>
                        <i class="fas fa-phone" aria-hidden="true"></i>
                        @Model?.PersonalInfo?.PhoneNumber
                    </p>
                }                
                <!-- EMAIL -->
                <p style="word-wrap:anywhere">
                    <a href="mailto:@Model?.PersonalInfo?.Email" target="_blank" rel="noopener noreferrer">
                        <i class="fa fa-envelope" aria-hidden="true"></i>
                        @Model?.PersonalInfo?.Email
                    </a>
                </p>
                @if (contacts != null)
                {
                    @foreach (var item in contacts)
                    {
                        <p>
                            @if (item.IsHyperlink)
                            {
                                <a href="@item.Value" target="_blank" rel="noopener noreferrer">
                                    @Html.Raw(@item.GetIcon())
                                    @(string.IsNullOrEmpty(item.DisplayName) ? item.Name : item.DisplayName)
                                </a>
                            }
                            else
                            {
                                @Html.Raw(@item.GetIcon())
                                @(string.IsNullOrEmpty(item.DisplayName) ? item.Name : item.DisplayName)
                            }
                        </p>
                    }
                }
            </section>
            <section>
                @if (skills != null)
                {
                    <h2>SKILLS</h2>
                    if (skills.TechnicalSkills != null && skills.TechnicalSkills.Length > 0)
                    {
                        <h3>Technical Skills</h3>
                        <ul>
                            @foreach (var skill in skills.TechnicalSkills)
                            {
                                <li>@skill</li>
                            }
                        </ul>
                    }
                    if (skills.SoftSkills != null && skills.SoftSkills.Length > 0)
                    {
                        <h3>Soft Skills</h3>
                        <ul>
                            @foreach (var skill in skills.SoftSkills)
                            {
                                <li>@skill</li>
                            }
                        </ul>
                    }
                }
            </section>

            @if (educationEntries != null && educationEntries.Count()>0)
            {
                <section>
                    <h2>EDUCATION</h2>
                    <br>
                    @foreach (var item in educationEntries)
                    {
                        <h3>@item.Title</h3>
                        <h4>@item.Organization</h4>
                        <h4>@(GetDates(item.StartDate, item.EndDate))</h4>
                        @if (item.Details != null)
                        {
                            <h4>@Html.Raw(item.Details)</h4>
                        }
                        <br>
                    }
                </section>
            }
            <!-- OPTIONAL -->
            @* <section>
            <h2>ACHIEVEMENTS</h2>
            <br>
            <a href="https://ieeexplore.ieee.org/document/9419164" target="_blank" rel="noopener noreferrer">IEEE Paper publication</a>
            </section> *@
        </article>
        <article id="mainRight">
            @if (!string.IsNullOrEmpty(Model?.ResumeInfo?.Description))
            {
                <section>
                    <h2>About</h2>
                    <!-- about you -->
                    <p>@Model?.ResumeInfo?.Description</p>
                </section>
            }
            @if (orderedCategories != null)
            {
                @foreach (var item in orderedCategories)
                {
                    if (item.Equals("Education"))
                        continue;
                    var entries = Model.ProfileEntries?.Where(x => !string.IsNullOrEmpty(x.Category) && x.Category.Equals(item));
                    if (entries != null && entries.Count() > 0)
                    {
                        <section>
                            <h2>@ProfileEntry.GetCategoryName(item)</h2>
                            <br>
                            @foreach (var entry in entries)
                            {
                                <h3>@entry.Title</h3>
                                <h4>@entry.Organization</h4>
                                <h4>@(GetDates(entry.StartDate, entry.EndDate))</h4>
                                <br>
                            }
                        </section>
                    }
                }
            }
        </article>
    </main>
</div>

<style>
    .template-content {
        color: lightgray;
    }
</style>