@model ResumeBuilder.Models.ViewModels.VMResumeBasicInfo
@{
    //Editor Version
    string? resumeId = null;
    if (ViewData.ContainsKey("ResumeId") && ViewData["ResumeId"] != null)
        resumeId = ViewData["ResumeId"]!.ToString();
}

<div id="resume-info-form" class="d-flex flex-row">
    <div style="flex:1">
        <form asp-action="Create" id="form">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-floating mb-2">
                <input asp-for="JobTitle" class="form-control editable-field" id="job-title-input" />
                <label asp-for="JobTitle" class="control-label"></label>
                <span asp-validation-for="JobTitle" class="text-danger"></span>
            </div>
            <div class="form-floating mb-2">
                <textarea asp-for="Description" class="form-control editable-field" id="description-input"></textarea>
                <label asp-for="Description" class="control-label"></label>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="px-2" id="skills-list">
                <h5>Skills</h5>
                <div id="technical-skills-list" class="mb-2">
                    <div class="d-flex flex-row align-items-center">
                        <h6>Technical Skills</h6>
                        <button id="add-technical-skill-btn" class="btn" type="button">
                            <i class="fas fa-plus-circle"></i>
                        </button>
                    </div>
                </div>
                <div id="soft-skills-list" class="mb-2">
                    <div class="d-flex flex-row align-items-center">
                        <h6>Soft Skills</h6>
                        <button id="add-soft-skill-btn" class="btn" type="button">
                            <i class="fas fa-plus-circle"></i>
                        </button>
                    </div>
                </div>
                <div id="skill-template" class="flex-row align-items-center" style="display:none">
                    <input id="skill-input" class="form-control" type="text" />
                    <button id="delete-btn" class="btn-close" type="button"></button>
                </div>
            </div>
            <div class="m-3">
                <div class="form-group">
                    <button id="submit-btn" type="button" class="btn btn-primary">Save</button>
                    <button id="cancel-btn" type="button" class="btn btn-secondary">Cancel</button>
                </div>
            </div>
        </form>
    </div>
</div>

<style>
    .editable-field {
        border-bottom: var(--bs-border-width) solid var(--bs-border-color);
    }
</style>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js" integrity="sha512-rstIgDs0xPgmG6RX1Aba4KV5cWJbAMcvRCVmglpam9SoHZiUCyQVDdH2LPlxoHtrv17XWblE/V/PP+Tr04hbtA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script type="text/javascript">

    $(document).ready(function () {
        const parent = $('#resume-info-form');

        $(parent).find("#submit-btn").click(function () {
            const form = $(parent).find("#form");
            if ($(form).valid()) {                
                var formData = getFormData($(form));
                formData['Skills'] = getSkillsJSON();                                
                $.ajax({
                    url: '@Url.Action("ResumeBasicInfo")?resumeId=@resumeId',
                    type: "PUT",
                    data: formData,
                    success: function (response) {
                    },
                    error: function (request, status, error) {
                        console.log(request.responseText);
                    }
                });
            }
        });

        // ---------- Skills Logic ----------
        const skillTemplate = $('#skill-template')[0];

        loadSkills();

        //Initialization

        $(parent).find("#add-technical-skill-btn").click(function () {
            addSkill(null, $('#technical-skills-list'));
        });

        $(parent).find("#add-soft-skill-btn").click(function () {
            addSkill(null, $('#soft-skills-list'));
        });

        function getFormData(form) {
            var unindexed_array = $(form).serializeArray();
            var indexed_array = {};

            $.map(unindexed_array, function (n, i) {
                indexed_array[n['name']] = n['value'];
            });

            return indexed_array;
        }

        function loadSkills() {
            if('@(Model.Skills == null)'=='True')
                return;
            let skills = JSON.parse('@Html.Raw(Model.Skills)');
            if(skills!=null){
                if(skills.technicalSkills!=null)
                {
                    for (let i = 0; i < skills.technicalSkills.length; i++) {
                        addSkill(skills.technicalSkills[i], $('#technical-skills-list'));
                    }
                }
                if(skills.softSkills!=null)
                {
                    for (let i = 0; i < skills.softSkills.length; i++) {
                        addSkill(skills.softSkills[i], $('#soft-skills-list'));
                    }
                }
            }
        }

        function getSkillsJSON() {
            var myObject ={
                "technicalSkills":[],
                "softSkills":[]
            };
            let index = 0;
            let technicalSkills = $('#technical-skills-list :input[type=text]');
            let softSkills = $('#soft-skills-list :input[type=text]');

            if(technicalSkills!=null)
            {
                for (const skill of technicalSkills) {
                    myObject.technicalSkills[index]=skill.value;
                    index++;                    
                }                
            }
            index=0;
            if(softSkills!=null)
            {
                for (const skill of softSkills) {
                    myObject.softSkills[index]=skill.value;
                    index++;
                }
            }

            return JSON.stringify(myObject);
        }

        function addSkill(skill = null, container = null) {            
            let newSkill = skillTemplate.cloneNode(true);
            newSkill.style.display="flex";

            $(container).append(newSkill);
            $(newSkill).find("#delete-btn").click(function () {
                    deleteSkill(newSkill);
            });

            if (skill != null) {
                let skillField = $(newSkill).find('#skill-input')[0];
                skillField.value = skill;
            }
        }

        function deleteSkill(skill) {
            skill.remove();
        }
    });
</script>